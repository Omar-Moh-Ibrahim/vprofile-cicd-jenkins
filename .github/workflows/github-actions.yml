name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  DOCKER_IMAGE: "omaribrahim91/app01"
  K8S_NAMESPACE: "default"  # Change to your namespace if needed

jobs:
  build:
    runs-on: ubuntu-latest  # GitHub-hosted runner for building

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build WAR file with Maven
        run: mvn clean package

      - name: Verify WAR file exists
        run: |
          ls -la target/
          [ -f "target/vprofile-v2.war" ] || exit 1

      - name: Build and Push Docker image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          cp target/vprofile-v2.war .
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker build -t $DOCKER_IMAGE:$GITHUB_SHA .
          docker tag $DOCKER_IMAGE:$GITHUB_SHA $DOCKER_IMAGE:latest
          docker push $DOCKER_IMAGE:$GITHUB_SHA
          docker push $DOCKER_IMAGE:latest

  deploy:
    needs: build  # Wait for build job to complete
    runs-on: self-hosted  # Your local runner
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Kubernetes
        run: |
          echo "Deploying $DOCKER_IMAGE:$GITHUB_SHA to cluster..."
          kubectl set image -n $K8S_NAMESPACE deployment/app01 app01=$DOCKER_IMAGE:$GITHUB_SHA
          kubectl rollout status -n $K8S_NAMESPACE deployment/app01
